#!/usr/bin/env node
'use strict';

var fs     = require('fs');
var net    = require('net');
var glob   = require('glob');
var async  = require('async');
var Parser = require('./lib/parser');

var argv = require('yargs')
  .default('dir', '/var/lib/docker/containers')
  .default('host', 'localhost')
  .default('port', '3000')
  .default('interval', 10)
  .argv;

if (argv.help || argv.h) {
  help();
}

function getLogFiles(pattern, fn) {
  glob(pattern, fn);
}

function run() {
  getLogFiles(argv.containersDir, function(err, files) {
    files.forEach(function(file) {
      fs.stat(file, function(err, stats) {
        if (stats.size > 0) {
          var rolledStream = fs.createWriteStream(file + '.rolled');
          var sourceStream = fs.createReadStream(file);
          var logstashConn = net.connect(argv.port, argv.host);

          sourceStream.pipe(rolledStream);
          sourceStream.pipe(new Parser(tags)).pipe(logstashConn);

          sourceStream.on('end', function() {
            fs.truncate(file, 0);
          });
        }
      })
    });
  });
}

setInterval(run, parseInt(argv.interval, 10) * 1000);
run();

function help() {
  console.log('Streams Docker logs to Logstash. Wakes up every --sleep seconds to process Docker logs.');
  console.log('  Usage: ' + argv.$0 + ' --host <logstash-host> --port <logstash-port>');
  process.exit();
};
